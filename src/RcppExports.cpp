// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_bm25
Rcpp::List rcpp_bm25(const Rcpp::DataFrame& idfs, const Rcpp::List& tokens, Rcpp::DataFrame& tokens_i);
RcppExport SEXP _pkgsimil_rcpp_bm25(SEXP idfsSEXP, SEXP tokensSEXP, SEXP tokens_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type idfs(idfsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type tokens(tokensSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type tokens_i(tokens_iSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bm25(idfs, tokens, tokens_i));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pkgsimil_rcpp_bm25", (DL_FUNC) &_pkgsimil_rcpp_bm25, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_pkgsimil(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
