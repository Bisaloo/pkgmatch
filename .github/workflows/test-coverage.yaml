on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: test-coverage

jobs:

  test-coverage:

    runs-on: ubuntu-latest

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage

      - name: Test coverage
        run: |
          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package"),
            line_exclusions = list(
              'src/tree-sitter/lib/src/alloc.c',
              'src/tree-sitter/lib/src/array.h',
              'src/tree-sitter/lib/src/atomic.h',
              'src/tree-sitter/lib/src/clock.h',
              'src/tree-sitter/lib/src/get_changed_ranges.c',
              'src/tree-sitter/lib/src/language.c',
              'src/tree-sitter/lib/src/language.h',
              'src/tree-sitter/lib/src/length.h',
              'src/tree-sitter/lib/src/lexer.c',
              'src/tree-sitter/lib/src/node.c',
              'src/tree-sitter/lib/src/parser.c',
              'src/tree-sitter/lib/src/point.h',
              'src/tree-sitter/lib/src/query.c',
              'src/tree-sitter/lib/src/reduce_action.h',
              'src/tree-sitter/lib/src/reusable_node.h',
              'src/tree-sitter/lib/src/stack.c',
              'src/tree-sitter/lib/src/subtree.c',
              'src/tree-sitter/lib/src/subtree.h',
              'src/tree-sitter/lib/src/tree.c',
              'src/tree-sitter/lib/src/tree_cursor.c',
              'src/tree-sitter/lib/src/tree_cursor.h',
              'src/tree-sitter/lib/src/unicode.h',
              'src/tree-sitter/lib/src/wasm_store.c',
              'src/tree-sitter-r/parser.c',
              'src/tree-sitter-r/scanner.c',
              'src/tree-similarity/cost_model/unit_cost_model_impl.h',
              'src/tree-similarity/data_structures/matrix.h',
              'src/tree-similarity/.h',
              'src/tree-similarity/label/label_dictionary_impl.h',
              'src/tree-similarity/label/string_label.h',
              'src/tree-similarity/label/string_label_impl.h',
              'src/tree-similarity/node/node_impl.h',
              'src/tree-similarity/node/tree_indexer_impl.h',
              'src/tree-similarity/parser/bracket_notation_parser.h',
              'src/tree-similarity/parser/bracket_notation_parser_impl.h',
              'src/tree-similarity/ted/apted_tree_index_impl.h',
              'src/tree-similarity/ted/ted_algorithm.h'
            )
          )
          covr::to_cobertura(cov)
        shell: Rscript {0}

      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: ${{ github.event_name != 'pull_request' && true || false }}
          file: ./cobertura.xml
          plugin: noop
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
